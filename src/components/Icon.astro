---
//This component renders Iconify icons, given their pack and the icon's name.

// The props for the component.
interface Props {
	/**
	 * The icon pack that the icon belongs to.
	 */
	pack: string;

	/**
	 * The name of the icon.
	 */
	name: string;

	/**
	 * Alt text for the icon. Accessability FTW!
	 */
	alt: string;

	/**
	 * The width of the icon. If it is a number, it's interpreted as raw pixel measurements.
	 * If the other value is set, defaults to that value. Otherwise defaults to `"1em"`.
	 * @default "1em"
	 */
	width?: string | number;

	/**
	 * The height of the icon. If it is a number, it's interpreted as raw pixel measurements.
	 * If the other value is set, defaults to that value. Otherwise defaults to `"1em"`.
	 * @default "1em"
	 */
	height?: string | number;
}

let { pack, name, alt, width, height, ...attributes } = Astro.props;

// If width and height are both undefined, set both to `1em`.
if (!width && !height) {
	width = "1em";
	height = "1em";
}
// If only height is undefined, set it to width.
else if (!height) {
	height = width;
}
// If only width is undefined, set it to height.
else if (!width) {
	width = height;
}

// Get the icon data associated with the icon in IconifyJSON format.
let iconData = await fetch(`https://api.iconify.design/${pack}.json?icons=${name}`)
	// Read the icon data JSON.
	.then((response) => response.json());

// A unique ID to reference the title and description by. Need this so that screen readers know
// exactly which element to reference for descriptions.
// Maybe a bit excessive?
let uniqueID = `iconify-icon-alt-${pack}:${name}-${Math.round(Math.random() * 1000000)}`;

// The inner HTML of the svg.
let innerHTML =
	// Add accessability features: an icon title, which is the name of the icon.
	`<title id="${uniqueID}-title">${name} icon</title>` +
	// An icon description, which is provided by the alt text.
	`<desc id="${uniqueID}-desc">${alt}</desc>` +
	// Finally, the body
	iconData.icons[name]?.body;
---

<svg
	{...attributes}
	iconify-icon={`${pack}:${name}`}
	role="img"
	aria-labelledby={`${uniqueID}-title ${uniqueID}-desc`}
	viewBox={`0 0 ${iconData.width} ${iconData.height}`}
	width={width}
	height={height}
	set:html={innerHTML}
/>
