---
//This component renders Iconify icons, given their pack and the icon's name.
import { read_string_stream } from "$lib/read_stream";

// The props for the component.
interface Props {
	/**
	 * The icon pack that the icon belongs to.
	 */
	pack: string;

	/**
	 * The name of the icon.
	 */
	name: string;

	/**
	 * The width of the icon. If it is a number, it's interpreted as raw pixel measurements.
	 * @default "1em"
	 */
	width?: string | number | undefined;

	/**
	 * The classes associated with the icon.
	 */
	class?: string;
}

let { pack, name, width, class: classes, ...otherProps } = Astro.props;

// Get the raw inner html of the svg.
let svgHTML = await fetch(`https://api.iconify.design/${pack}/${name}.svg`)
	// Read the SVG.
	.then((response) => read_string_stream(response))
	// Get all content within the SVG.
	.then((svg) => svg.match(/(?<=\<svg.+?\>).+?(?=\<\/svg\>)/g))
	// Touch-ups before releasing into the wild.
	.then((innerHTML) => (innerHTML ? innerHTML[0] : ""));
---

<svg
	iconify-icon={`${pack}:${name}`}
	class={classes}
	viewBox="0 0 24 24"
	width={width ? width : "1em"}
	set:html={svgHTML}
	{...otherProps}
/>
